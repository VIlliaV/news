{"mappings":"gwBAAAA,EAAA,S,WAAA,MAAMC,EAAM,2CAENC,EAAe,iEAAiED,IAGhFE,EAAwB,4DAA4DF,IAiC1FG,eAAeC,IAYb,aAXyBC,MAAM,GAAGJ,KAC/BK,MAAKC,IACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAM,4BAElB,OAAOF,EAAKG,MAAM,IAEnBJ,MAAKK,GAEGA,EAAWC,S,CAKxBT,eAAeU,EAAkBC,GAC/B,MAAMP,QAAaF,MAAM,mDAA4BS,UAAiBd,KACtE,IAAKO,EAAKC,GAAI,CAEZ,OADY,IAAIC,MAAM,2B,CAKxB,aAFyBF,EAAKG,QAEZE,O,CAMpBT,eAAeY,IAYb,aAXmBV,MAAM,GAAGH,KACzBI,MAAKC,IACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAM,4BAElB,OAAOF,EAAKG,MAAM,IAEnBJ,MAAKC,GAEGA,EAAKK,S,uCC7ElB,IAAAI,EAAAjB,EAAA,SAgBA,SAASkB,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,oB,CAGzC,MAAMC,EAAaC,SAASC,cAAc,kBAGnC,SAASC,EAAiBC,GAC/B,MAAMC,EAAkBD,EACrBE,KACCC,IAAQ,gGACwCA,EAAKC,gGA0D3D,SAAkBD,GAChB,MAAME,EAAWF,EAAKG,MAAMJ,KAAIK,GAAMA,EAAG,kBAAkB,GAAGH,MAC9D,OAAwB,IAApBC,EAASG,OACJ,gCACKH,C,CA3DGI,CAASN,yBACTA,EAAKO,2EAsCAC,EAnCZR,EAAKS,WAoCXD,GAGK,qGApCKR,EAAKU,IAAIC,MAAM,GAAIX,EAAKU,IAAIL,kSAOKL,EAAKY,iFAiCtD,SAAmBJ,GACjB,OAAIA,EAAKH,OAAS,IACTG,EAAKK,UAAU,EAAG,KAAO,MAEzBL,C,CAlCDM,CAAUd,EAAKe,oHAgBzB,SAAsBC,GACpB,MAAOC,EAAMC,EAAOC,GAAOH,EAAWI,MAAM,KAE5C,MADgB,GAAGD,KAAOD,KAASD,G,CAfOI,CAChCrB,EAAKsB,wEAEiCtB,EAAKC,4EAgBvD,IAAwBO,CAZZ,IAEPe,KAAK,IACR9B,EAAW+B,UAAY1B,C,CAvCzBF,EAAiBR,KAuEjBK,EAAWgC,iBAAiB,SAE5B,SAAoBC,GAElB,GADAA,EAAMC,iBACwB,WAA1BD,EAAME,OAAOC,SACf,OAEF,MAAMC,EAAQJ,EAAME,OAAOG,WAAW,GAAGF,SACnCG,EAAaF,EAAMnB,MAAM,EAAGmB,EAAMzB,OAAS,IACjD,EAAAlB,EAAA8C,4BAA2BD,GAC3BpC,EAAiBR,I,gOCtGnBlB,EAAA,SAoBA,SAASgE,IACP,OAAO7C,KAAKC,MAAMC,aAAaC,QAAQ,oB,CAIzC,SAAS2C,EAAsBnC,GAC7B,IAAIoC,EAAWF,IACE,OAAbE,EACFA,EAAW,CAACpC,GAEZoC,EAASC,KAAKrC,GAEhBT,aAAa+C,QAAQ,mBAAoBjD,KAAKkD,UAAUH,G,CAG1D,SAASI,EAA2BC,GAClC,IAAIL,EAAWF,IACXQ,EAAY,EAChBN,EAASrC,KAAI,CAACC,EAAM2C,KACH3C,EAAKU,IAAIC,MAAM,GAAIX,EAAKU,IAAIL,UAC5BoC,IACbC,EAAYC,EAAK,IAGrBP,EAASQ,OAAOF,EAAW,GAC3BnD,aAAa+C,QAAQ,mBAAoBjD,KAAKkD,UAAUH,G,uCC7C3B1C,SAASC,cACtC,2B","sources":["src/js/api.js","src/js/card-markup.js","src/js/localStorage.js","src/js/not-found-markup.js"],"sourcesContent":["const KEY = 'api-key=iQPZlbRhGEGKM4smMiUCFTOlyGy9K2EX';\n\nconst CAREGORY_URL = `https://api.nytimes.com/svc/news/v3/content/section-list.json?${KEY}`;\nconst SEARCH_BY_CAREGORY_URL =\n  'https://api.nytimes.com/svc/news/v3/content/all/';\nconst MOST_POPULAR_NEWS_URL = `https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?${KEY}`;\nconst SEARCH_BY_WORD_URL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?${KEY}&sort=relevance`;\n\nfunction fixDate(date) {\n  let day = date.split('.');\n  if (Number(day[0]) < Number(day[2])) return day.reverse().join('');\n  return day.join('');\n}\n\nasync function getNewsBySearch(word, page = 1, date = 20100101) {\n  let begin_date = 0;\n  let end_date = 0;\n\n  if (date === 20100101) {\n    begin_date = date;\n    end_date = fixDate(new Date().toLocaleDateString());\n  } else {\n    begin_date = fixDate(date);\n    end_date = begin_date;\n  }\n\n  const newsJson = await fetch(\n    `${SEARCH_BY_WORD_URL}&q=${word}&page=${page}&begin_date=${begin_date}&end_date=${end_date}`\n  );\n  if (!newsJson.ok) {\n    const err = new Error('Something went wrong 404');\n    return err;\n  }\n  const news = await newsJson.json();\n  //  console.log(news.response.docs);\n  return news.response.docs;\n}\n\nasync function getCategory() {\n  const categories = await fetch(`${CAREGORY_URL}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error('Something went wrong 404');\n      }\n      return resp.json();\n    })\n    .then(categories => {\n      //      console.log(categories.results);\n      return categories.results;\n    });\n  return categories;\n}\n\nasync function getNewsByCategory(category) {\n  const resp = await fetch(`${SEARCH_BY_CAREGORY_URL}${category}.json?${KEY}`);\n  if (!resp.ok) {\n    const err = new Error('Something went wrong 404');\n    return err;\n  }\n  const categories = await resp.json();\n  //  console.log(categories.results);\n  return categories.results;\n}\n\nimport { createNewsMarkup } from './card-markup';\nimport { whenNotFoundMarkup } from './not-found-markup';\n\nasync function getPopularNews() {\n  const news = await fetch(`${MOST_POPULAR_NEWS_URL}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error('Something went wrong 404');\n      }\n      return resp.json();\n    })\n    .then(resp => {\n      //      console.log(resp.results);\n      return resp.results;\n    });\n  return news;\n}\n\nexport { getCategory, getNewsByCategory, getPopularNews, getNewsBySearch };\n","import { removeFromFavoriteArticles } from './localStorage';\n\n// const buttonRemove = `<button type=\"button\" class=\"favorite-cards__remove-btn id=\"remove-btn\">\n// Remove from favorite\n// <svg class=\"favorite-cards__heart-icon\" width=\"32\" height=\"32\">\n//   <use href=\"/sprite-full.e7f74a66.svg#heart-full\"></use>\n// </svg>\n// </button>`;\n\n// const buttonAdd = `<button type=\"button\" class=\"favorite-cards__add-btn id=\"remove-btn\">\n// Add to favorite\n//  <svg class=\"favorite-cards__heart-full-icon\" width=\"32\" height=\"32\">\n//    <use href=\"/sprite-full.e7f74a66.svg#heart\"></use>\n//  </svg>\n//  </button>`;\n\nfunction getFavoriteArticles() {\n  return JSON.parse(localStorage.getItem('favoriteArticles'));\n}\n// getFavoriteArticles();\nconst markupList = document.querySelector('#favorite-list');\ncreateNewsMarkup(getFavoriteArticles());\n\nexport function createNewsMarkup(newsCard) {\n  const newsItemsMarkup = newsCard\n    .map(\n      item => `<li class=\"favorite-cards__item\">\n        <a class=\"favorite-cards__image-link\" href=\"${item.url}\">\n          <img\n            class=\"favorite-cards__img\" width=\"440\"\n            src=\"${getPhoto(item)}\"\n            alt=\"${item.per_facet}\"\n          />\n          <p class=\"favorite-cards__category\">${addDefaultText(\n            item.subsection\n          )}</p>\n          <button type=\"button\" class=\"favorite-cards__remove-btn \n          id=\"${item.uri.slice(38, item.uri.length)}\">\n          Remove from favorite\n          <svg class=\"favorite-cards__heart-icon\" width=\"32\" height=\"32\">\n            <use href=\"/sprite-full.e7f74a66.svg#heart-full\"></use>\n          </svg>\n          </button>\n        </a>\n        <h2 class=\"favorite-cards__news-title\">${item.title}\n        </h2>\n        <p class=\"favorite-cards__dicription\">\n        ${limitText(item.abstract)}\n        </p>\n        <div class=\"favorite-cards__bottom\">\n          <p class=\"favorite-cards__date\">${reformatDate(\n            item.published_date\n          )}</p>\n          <a class=\"favorite-cards__link\" href=\"${item.url}\">\n            Read more\n          </a>\n        </div>\n      </li>`\n    )\n    .join('');\n  markupList.innerHTML = newsItemsMarkup;\n}\n\nfunction reformatDate(dateString) {\n  const [year, month, day] = dateString.split('-');\n  const newDate = `${day}/${month}/${year}`;\n  return newDate;\n}\n\nfunction addDefaultText(text) {\n  if (text) {\n    return text;\n  } else {\n    return 'Other...';\n  }\n}\n\nfunction limitText(text) {\n  if (text.length > 110) {\n    return text.substring(0, 110) + '...';\n  } else {\n    return text;\n  }\n}\n\nfunction getPhoto(item) {\n  const photoUrl = item.media.map(el => el['media-metadata'][2].url);\n  if (photoUrl.length === 0) {\n    return '/image-not-found.584be82b.jpg';\n  } else return photoUrl;\n}\n\nmarkupList.addEventListener('click', deleteCard);\n\nfunction deleteCard(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const uriId = event.target.attributes[2].nodeName;\n  const uriIdClean = uriId.slice(0, uriId.length - 1);\n  removeFromFavoriteArticles(uriIdClean);\n  createNewsMarkup(getFavoriteArticles());\n}\n","import { getPopularNews } from './api';\n\nfunction checkDarkTheme() {\n  const theme = localStorage.getItem('ui-theme');\n  if (theme !== null) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction changeTheme() {\n  const theme = checkDarkTheme('ui-theme');\n  if (theme) {\n    localStorage.removeItem('ui-theme');\n  } else {\n    localStorage.setItem('ui-theme', 'dark');\n  }\n}\n\nfunction getFavoriteArticles() {\n  return JSON.parse(localStorage.getItem('favoriteArticles'));\n}\n// console.log(getFavoriteArticles());\n\nfunction addToFavoriteArticles(item) {\n  let favorite = getFavoriteArticles();\n  if (favorite === null) {\n    favorite = [item];\n  } else {\n    favorite.push(item);\n  }\n  localStorage.setItem('favoriteArticles', JSON.stringify(favorite));\n}\n\nfunction removeFromFavoriteArticles(itemId) {\n  let favorite = getFavoriteArticles();\n  let indexCard = 0;\n  favorite.map((item, index) => {\n    const cardId = item.uri.slice(38, item.uri.length);\n    if (cardId === itemId) {\n      indexCard = index;\n    }\n  });\n  favorite.splice(indexCard, 1);\n  localStorage.setItem('favoriteArticles', JSON.stringify(favorite));\n}\n\nfunction testFavorite() {\n  getPopularNews().then(resp => {\n    localStorage.setItem('favoriteArticles', JSON.stringify(resp));\n  });\n}\n// testFavorite();\n\nfunction addToReadingNews(item) {\n  let readingNews = getReadingNews();\n  if (readingNews === null) {\n    favorite = [{ readingNews, date: new Date().toLocaleDateString() }];\n  } else {\n    favorite.push({ readingNews, data: new Date().toLocaleDateString() });\n    localStorage.setItem('favoriteArticles', JSON.stringify(favorite));\n  }\n}\n\nfunction getDatesReadingNews() {\n  let readingNews = getReadingNews();\n  let data = readingNews.then(resp => {\n    resp.reduse(\n      acc,\n      el => {\n        if (acc.include(el.date)) {\n          return;\n        } else acc.push(el);\n        return acc;\n      },\n      []\n    );\n  });\n  return data;\n}\n\nfunction getReadingNewsByDate(date) {\n  let readingNews = getReadingNews().then(resp => {\n    resp.filter(news => news.data === date);\n  });\n  return readingNews;\n}\n\nexport {\n  checkDarkTheme,\n  changeTheme,\n  getFavoriteArticles,\n  addToFavoriteArticles,\n  removeFromFavoriteArticles,\n  testFavorite,\n  addToReadingNews,\n  getDatesReadingNews,\n  getReadingNewsByDate,\n};\n","const favoriteGallerySection = document.querySelector(\n  '#favorite-galery-section'\n);\n\nexport function whenNotFoundMarkup() {\n  const notFoundImage = `<img\n    class=\"not-found__img\"\n    src=\"/image-not-found.584be82b.jpg\"\n    alt=\"Something went wrong\"\n  />`;\n  favoriteGallerySection.innerHTML = notFoundImage;\n}\n"],"names":["parcelRequire","$56ca17bb174b0ce3$var$KEY","$56ca17bb174b0ce3$var$CAREGORY_URL","$56ca17bb174b0ce3$var$MOST_POPULAR_NEWS_URL","async","$56ca17bb174b0ce3$export$410364bbb673ddbc","fetch","then","resp","ok","Error","json","categories","results","$56ca17bb174b0ce3$export$1c7857e4f301469f","category","$56ca17bb174b0ce3$export$972a697636ceb23f","$31u3U","$02ed5811993e6f78$var$getFavoriteArticles","JSON","parse","localStorage","getItem","$02ed5811993e6f78$var$markupList","document","querySelector","$02ed5811993e6f78$export$5953011b3d66a160","newsCard","newsItemsMarkup","map","item","url","photoUrl","media","el","length","$02ed5811993e6f78$var$getPhoto","per_facet","text","subsection","uri","slice","title","substring","$02ed5811993e6f78$var$limitText","abstract","dateString","year","month","day","split","$02ed5811993e6f78$var$reformatDate","published_date","join","innerHTML","addEventListener","event","preventDefault","target","nodeName","uriId","attributes","uriIdClean","removeFromFavoriteArticles","$2338c8cd734f85a6$export$6ef34039e2b61aac","$2338c8cd734f85a6$export$fb11599e4c51e866","favorite","push","setItem","stringify","$2338c8cd734f85a6$export$a7208fa74e4c591e","itemId","indexCard","index","splice"],"version":3,"file":"index.2cb9185b.js.map"}