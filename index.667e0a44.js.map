{"mappings":"AAgEAA,eAAeC,IAYb,aAXmBC,MAAM,qGACtBC,MAAKC,IACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAM,4BAElB,OAAOF,EAAKG,MAAM,IAEnBJ,MAAKC,GAEGA,EAAKI,S,CCxElB,MAAMC,EAAYC,SAASC,cAAc,mBAEzCC,OAAOC,iBAAiB,QAAQ,KAC9BZ,IACGE,MAAKW,IAoDV,IAA2BC,IAnDHD,EAoDtBL,EAAUO,mBAAmB,YAAiCD,EA5C3DE,KAAI,EAACC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,eAAEA,EAAcC,IAAEA,KAEvC,kLADMJ,EAAM,GAAG,kBAAkB,GAAQ,ifAiB1CC,qFAcZ,SAAsBI,GACpB,IAAIC,EAOJ,OAJEA,EAFED,EAAKE,OAAS,KAChBF,EAAOA,EAAKG,MAAM,EAAG,MACL,MAEPH,EAEJC,C,CAnBKG,CAAaP,mHAGmBC,4DACMC,sDAI/CM,KAAK,KApCJC,QAAQC,IAAIhB,EAAK,IAElBiB,OAAMC,GAAOH,QAAQC,IAAIE,IAAK","sources":["src/js/api.js","src/js/home.js"],"sourcesContent":["const KEY = 'api-key=iQPZlbRhGEGKM4smMiUCFTOlyGy9K2EX';\n\nconst CAREGORY_URL = `https://api.nytimes.com/svc/news/v3/content/section-list.json?${KEY}`;\nconst SEARCH_BY_CAREGORY_URL =\n  'https://api.nytimes.com/svc/news/v3/content/all/';\nconst MOST_POPULAR_NEWS_URL = `https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?${KEY}`;\nconst SEARCH_BY_WORD_URL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?${KEY}&sort=relevance`;\n\nfunction fixDate(date) {\n  let day = date.split('.');\n  if (Number(day[0]) < Number(day[2])) return day.reverse().join('');\n  return day.join('');\n}\n\nasync function getNewsBySearch(word, page = 1, date = 20100101) {\n  let begin_date = 0;\n  let end_date = 0;\n\n  if (date === 20100101) {\n    begin_date = date;\n    end_date = fixDate(new Date().toLocaleDateString());\n  } else {\n    begin_date = fixDate(date);\n    end_date = begin_date;\n  }\n\n  const newsJson = await fetch(\n    `${SEARCH_BY_WORD_URL}&q=${word}&page=${page}&begin_date=${begin_date}&end_date=${end_date}`\n  );\n  if (!newsJson.ok) {\n    const err = new Error('Something went wrong 404');\n    return err;\n  }\n  const news = await newsJson.json();\n  //  console.log(news.response.docs);\n  return news.response.docs;\n}\n\nasync function getCategory() {\n  const categories = await fetch(`${CAREGORY_URL}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error('Something went wrong 404');\n      }\n      return resp.json();\n    })\n    .then(categories => {\n      //      console.log(categories.results);\n      return categories.results;\n    });\n  return categories;\n}\n\nasync function getNewsByCategory(category) {\n  const resp = await fetch(`${SEARCH_BY_CAREGORY_URL}${category}.json?${KEY}`);\n  if (!resp.ok) {\n    const err = new Error('Something went wrong 404');\n    return err;\n  }\n  const categories = await resp.json();\n  //  console.log(categories.results);\n  return categories.results;\n}\n\nasync function getPopularNews() {\n  const news = await fetch(`${MOST_POPULAR_NEWS_URL}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error('Something went wrong 404');\n      }\n      return resp.json();\n    })\n    .then(resp => {\n      //      console.log(resp.results);\n      return resp.results;\n    });\n  return news;\n}\n\nexport { getCategory, getNewsByCategory, getPopularNews, getNewsBySearch };\n","import { getPopularNews } from '../js/api';\n\nconst newsCards = document.querySelector('.favorite-cards');\n\nwindow.addEventListener('load', () => {\n  getPopularNews()\n    .then(data => {\n      appendCardsMurkup(data);\n      console.log(data);\n    })\n    .catch(err => console.log(err));\n});\n\nfunction generateCardsMurkup(cardsArray) {\n  return cardsArray\n    .map(({ media, title, abstract, published_date, url }) => {\n      let imgUrl = media[0]['media-metadata'][2]['url'];\n      return `<li class=\"favorite-cards__item\">\n          <div class=\"favorite-cards__image-cont\" href=\"\">\n            <img\n              class=\"favorite-cards__img\"\n              src=\"${imgUrl}\"\n              alt=\"asia-businesswoman\"\n            />\n            <p class=\"favorite-cards__job-src\">Job searching</p>\n            <button class=\"favorite-cards__remove-btn\">\n              Remove from favorite\n              <svg class=\"favorite-cards__heart-icon\" width=\"32\" height=\"32\">\n                <use href=\"images/sprite-full.svg#heart-full\"></use>\n              </svg>\n            </button>\n          </div>\n          <h2 class=\"favorite-cards__news-title\">\n          ${title}\n          </h2>\n          <p class=\"favorite-cards__dicription\">\n            ${textCropping(abstract)}\n          </p>\n          <div class=\"favorite-cards__bottom\">\n            <p class=\"favorite-cards__date\">${published_date}</p>\n            <a class=\"favorite-cards__link\" href=\"${url}\">Read more</a>\n          </div>\n        </li>`;\n    })\n    .join('');\n}\n\nfunction textCropping(text) {\n  let result;\n  if (text.length > 150) {\n    text = text.slice(0, 150);\n    result = text + '...';\n  } else {\n    result = text;\n  }\n  return result;\n}\n\nfunction appendCardsMurkup(cards) {\n  newsCards.insertAdjacentHTML('beforeend', generateCardsMurkup(cards));\n}\n"],"names":["async","$56ca17bb174b0ce3$export$972a697636ceb23f","fetch","then","resp","ok","Error","json","results","$7a8fb0f659835779$var$newsCards","document","querySelector","window","addEventListener","data","cards","insertAdjacentHTML","map","media","title","abstract","published_date","url","text","result","length","slice","$7a8fb0f659835779$var$textCropping","join","console","log","catch","err"],"version":3,"file":"index.667e0a44.js.map"}